<?xml version="1.0"?>
<!DOCTYPE QR SYSTEM "QuickReview.dtd">

<QA ID="1" type="OneAnswer" category="CPP" countdown="0" resetto="0" >
  <Question>
        How can I handle a constructor that fails ?
  </Question>

  <Answer>
     throw an exception. Constructors don't have a return type, so it's not possible to use return codes. The best way to signal constructor failure is therefore to throw an exception.
  </Answer>
</QA>


<QA ID="2" type="OneAnswer" category="CPP" countdown="0" resetto="0" >
  <Question>
        Is this question No 2 ?
  </Question>
  <Answer>
        Yes
  </Answer>
</QA>
<QA ID="3" type="OneAnswer" category="CPP" countdown="0" resetto="0" >
  <Question>
        Is this question No 3 ?
  </Question>
  <Answer>
        Yes
  </Answer>
</QA>
<QA ID="4" type="OneAnswer" category="CPP" countdown="0" resetto="0" >
  <Question>
        Is this question No 4 ?
  </Question>
  <Answer>
        Yes
  </Answer>
</QA>
<QA ID="5" type="OneAnswer" category="CPP" countdown="0" resetto="0" >
  <Question>
        Is this question No 5 ?
  </Question>
  <Answer>
        Yes
  </Answer>
</QA>
<QA ID="6" type="OneAnswer" category="CPP" countdown="0" resetto="0" >
  <Question>
        Is this question No 6 ?
  </Question>
  <Answer>
        Yes
  </Answer>
</QA>

<QA type="MultiChoice"  category="CPP">
    <Question>
        Pick a valid declaration for overloading ++ in postfix form where T is the class name
    </Question>
   <ChoiceA>
      T operator++(); </ChoiceA>
   <ChoiceB>
     T operator++(int);
  </ChoiceB>
  <ChoiceC>
     T && operator ++();
  </ChoiceC>
  <ChoiceD>
     T && operator ++(int);
  </ChoiceD>
  <Answer> B </Answer>
  <Explain>
     bla bla bla
  </Explain>
</Q2>